# Generated by Django 2.0 on 2020-06-10 11:46

import backoffice.UserManager
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.UUID('7a878ba9-8e9f-46dd-a1a3-c88b647f35bd'), editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('facebookId', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('android', models.BooleanField(default=False)),
                ('ios', models.BooleanField(default=False)),
                ('acceptPush', models.BooleanField(default=False)),
                ('pushToken', models.CharField(blank=True, db_index=True, max_length=101, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('valid', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', backoffice.UserManager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Klad',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('d430ceb7-548e-42c2-85e3-c71d43631577'), editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(db_index=True, max_length=100)),
                ('qrCode', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='media/%Y/%m/%d')),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('available', models.BooleanField(default=True)),
                ('valid', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Klad',
                'verbose_name_plural': 'Klads',
            },
        ),
    ]
